[project]
name = "dnn-template"
version = "0.1.0"
authors = [{name = "Vadym Stupakov", email = "vadim.stupakov@gmail.com"}]
requires-python = "==3.11.*"

dependencies = [
    "expression",
    "tensorboard",
    "tqdm",
    "polars",
    "natsort",
    "scipy",
    "scikit-learn",
    "jupyterlab",
    "matplotlib",
    "plotly",
    "humanize",
    "torch>=2.7",
    "lightning",
    "dill",
    "yfinance",
    "more-itertools",
    "diskcache",
    "plotly-resampler",
    "pydantic",
    "scalene",
    "duckdb",
    "sqlalchemy",
    "sqlalchemy_utils",
    "python-dotenv",
    "asyncpg",
    "psycopg2-binary",
    "duckdb-engine",
    "psutil",
    "xarray",
    "einops",
    "pyarrow",
    "finvizfinance",
    "requests-cache>=1.2.1",
    "einx>=0.3.0",
    "adam-atan2-pytorch>=0.1.18",
    "transformers>=4.52.2",
    "torchdata>=0.11.0",
    "lmdb-cache",
    "pytest>=8.4.0",
    "torchvision>=0.22.0",
    "opencv-python>=4.11.0.86",
    "pandas>=2.2.3",
    "dash>=3.0.4",
    "torchaudio>=2.7.0",
    "torchinfo>=1.8.0",
    "seaborn>=0.13.2",
    "kagglehub>=0.3.12",
]

[project.optional-dependencies]
dev = [
    "ipykernel",
    "ipython",
    "ruff",
]


[tool.uv.sources]
torch = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]
torchvision = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]

torchaudio = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux'" },
]

lmdb-cache = { git = "https://github.com/Red-Eyed/lmdb_cache.git" }

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[tool.ruff]
exclude = [
    ".git",
    "__pycache__",
    "setup.py",
    "build",
    "dist",
    "releases",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
    ".vscode",
    ".github",
    "work_dir",
    "*.ipynb"
]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes errors
    "W",  # pycodestyle warnings
    "B",  # bugbear best practices checker
    "T",  # mypy type errors
    "B",  # flake8-bugbear best practices checker
    "I001",  # isort import order
]
ignore = ["I001"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
line-ending = "lf"
skip-magic-trailing-comma = false
